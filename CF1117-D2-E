// https://codeforces.com/blog/entry/65365?#comment-493763

#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <math.h>
#include <random>
#include <string>
#include <cstring>
#include <set>
#include <time.h>
using namespace std;
 
#define max3(a, b, c) max(a, max(b, c))
#define min3(a, b, c) min(a, min(b, c))
#define mp make_pair
#define f first
#define se second
#define pb push_back
#define ppb pop_back
#define ll long long
#define ull unsigned long long
#define cntbit(x) __builtin_popcount(x)
#define endl '\n'
#define uset unordered_set
#define umap unordered_map
#define pii pair<int, int>
#define ld long double
#define pll pair<long long, long long>
 
const int period[3] = {25, 23, 19};
const int inf = 2e9;
const int N = 1e4 + 15;
int n, m;
string s, t, cur, ans;
set <int> prob[2][N];
vector <int> ord[26];
bool used[N];
 
void dfs(int i) {
    used[i] = true;
	for(int ind : ord[cur[i] - 'a'])
	    if(!used[ind] && prob[0][i].find(ind) != prob[0][i].end() && prob[1][i].find(ind) != prob[1][i].end()) {
			dfs(ind);
			swap(t[i], t[ind]);
		}
}
 
int main() {
	cin >> t; n = t.size();
	for(int d = 0; d < 2; ++d) {
		s.clear();
		for(int i = 0; s.size() < n; i = ((i + 1) % period[d]))
			s += char(i + 'a');
		for(int i = 0; i < 26; ++i)
			ord[i].clear();
		for(int i = 0; i < n; ++i)
			ord[s[i] - 'a'].pb(i);
		cout << "? " << s << endl;
		fflush(stdout);
		cin >> cur;
		for(int i = 0; i < n; ++i) {
		    if(d == 0)
    			prob[d][i].insert(ord[cur[i] - 'a'].begin(), ord[cur[i] - 'a'].end());
    		else {
                for(int ind : ord[cur[i] - 'a'])
                    if(prob[0][i].find(ind) != prob[0][i].end())
                        prob[d][i].insert(ind);
            }
		}
	}
	s.clear();
	for(int i = 0; s.size() < n; i = ((i + 1) % period[2]))
		s += char(i + 'a');
	for(int i = 0; i < 26; ++i)
		ord[i].clear();
	for(int i = 0; i < n; ++i)
		ord[s[i] - 'a'].pb(i);
	cout << "? " << s << endl;
	fflush(stdout);
	cin >> cur;
	for(int i = 0; i < n; ++i)
	    if(!used[i])
    	    dfs(i);
	cout << "! " << t << endl;
	fflush(stdout);
	return 0;
}
